[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/src/main/scala/com/malaka/AkkaQuickstart.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/AkkaQuickstart.scala, /Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/Device.scala, /Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/IotSupervisor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$$anonfun$receive$1.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$add$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$add.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/Printer$$anonfun$receive$2.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$payTax.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankTransaction$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/AkkaQuickstart$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$payTax$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankTransaction.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/AkkaQuickstart.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$overview$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/AkkaQuickstart$delayedInit$body.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$subtract.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/Printer$Overview$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/BankActor$subtract$.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/Printer$Overview.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/Printer.class, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/target/scala-2.12/classes/com/malaka/Printer$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(com.malaka.Printer.Overview, com.malaka.BankTransaction, com.malaka.BankActor.add, com.malaka.BankActor.subtract, com.malaka.BankActor.payTax, com.malaka.AkkaQuickstart, com.malaka.BankActor.overview, com.malaka.Printer, com.malaka.BankActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/src/main/scala/com/malaka/AkkaQuickstart.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(com.malaka.Printer.Overview, com.malaka.BankTransaction, com.malaka.BankActor.add, com.malaka.BankActor.subtract, com.malaka.BankActor.payTax, com.malaka.AkkaQuickstart, com.malaka.BankActor.overview, com.malaka.Printer, com.malaka.BankActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/AkkaQuickstart.scala, /Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/Device.scala, /Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/src/main/scala/com/malaka/IotSupervisor.scala, /Users/gilles/Documents/Trust1Team/_examples/scala_akka/malakabank/src/main/scala/com/malaka/AkkaQuickstart.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 3 sources: invalidated sources (4) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to /Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4b30af14 for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/classes:/Users/gilles/.sbt/boot/scala-2.12.6/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/gilles/Documents/Trust1Team/_examples/learn-scala/scala_akka/malakabank/target/scala-2.12/classes:/Users/gilles/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.19.jar:/Users/gilles/.ivy2/cache/com.typesafe/config/bundles/config-1.3.3.jar:/Users/gilles/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/Users/gilles/.ivy2/cache/com.typesafe.akka/akka-actor-typed_2.12/jars/akka-actor-typed_2.12-2.5.19.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.092867326 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankActor.subtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankActor.subtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankActor.subtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankActor.subtract,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(subtract,[Default]), UsedName(!=,[Default]), UsedName(com;malaka;BankActor;subtract;init;,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.BankActor.subtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(subtract,[Default]), UsedName(!=,[Default]), UsedName(com;malaka;BankActor;subtract;init;,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankActor.subtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.IotSupervisor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.IotSupervisor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.IotSupervisor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.malaka.IotApp: Set(UsedName(apply,[Default]), UsedName(IotSupervisor,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.IotSupervisor,ModifiedNames(changes = UsedName(narrow,[Default]), UsedName(finalize,[Default]), UsedName(receiveSignal,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(com;malaka;IotSupervisor;init;,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(onMessage,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(IotSupervisor,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(orElse,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The com.malaka.IotSupervisor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(narrow,[Default]), UsedName(finalize,[Default]), UsedName(receiveSignal,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(com;malaka;IotSupervisor;init;,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(onSignal,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(onMessage,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(IotSupervisor,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(orElse,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.IotSupervisor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.malaka.IotApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankActor.overview...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankActor.overview)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankActor.overview)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankActor.overview,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.BankActor.overview has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankActor.overview)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Device.RespondTemperature...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Device.RespondTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Device.RespondTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Device.RespondTemperature,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(com;malaka;Device;RespondTemperature;init;,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName(RespondTemperature,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(value,[Default]), UsedName(requestId,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.Device.RespondTemperature has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(com;malaka;Device;RespondTemperature;init;,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName(RespondTemperature,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(value,[Default]), UsedName(requestId,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Device.RespondTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankActor.add...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankActor.add)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankActor.add)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankActor.add,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(com;malaka;BankActor;add;init;,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(add,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.BankActor.add has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(com;malaka;BankActor;add;init;,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(add,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankActor.add)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankTransaction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankTransaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankTransaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankTransaction,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(exchange,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(payTaxes,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(BankTransaction,[Default]))) invalidates 1 classes due to The com.malaka.BankTransaction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(exchange,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(payTaxes,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(BankTransaction,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankTransaction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Device.DeviceMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Device.DeviceMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding com.malaka.Device.ReadTemperature by com.malaka.Device.DeviceMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Device.DeviceMessage, com.malaka.Device.ReadTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Device.DeviceMessage,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(DeviceMessage,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The com.malaka.Device.DeviceMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(DeviceMessage,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Device.DeviceMessage, com.malaka.Device.ReadTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.IotApp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.IotApp)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.IotApp)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.IotApp,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(IotApp,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The com.malaka.IotApp has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(IotApp,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.IotApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Printer.Overview...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Printer.Overview)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Printer.Overview)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Printer.Overview,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName(Overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(com;malaka;Printer;Overview;init;,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.Printer.Overview has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName(Overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(amount,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(com;malaka;Printer;Overview;init;,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Printer.Overview)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankActor,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(Receive,[Default]), UsedName(context,[Implicit]), UsedName(ne,[Default]), UsedName(aroundPostStop,[Default]), UsedName(preStart,[Default]), UsedName(subtract,[Default]), UsedName(com;malaka;BankActor;init;,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(props,[Default]), UsedName(notifyAll,[Default]), UsedName(preRestart,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(payTax,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundPreStart,[Default]), UsedName(self,[Implicit]), UsedName(notify,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(postStop,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(toString,[Default]), UsedName(safe,[Default]), UsedName(add,[Default]), UsedName(BankActor,[Default]))) invalidates 1 classes due to The com.malaka.BankActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.AkkaQuickstart...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.AkkaQuickstart)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.AkkaQuickstart)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.AkkaQuickstart,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(system,[Default]), UsedName(printer,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(trust1teamBank,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(AkkaQuickstart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(malakaBank,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The com.malaka.AkkaQuickstart has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(system,[Default]), UsedName(printer,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(trust1teamBank,[Default]), UsedName(main,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(AkkaQuickstart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(malakaBank,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.AkkaQuickstart)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Device...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Device)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Device)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Device,ModifiedNames(changes = UsedName(narrow,[Default]), UsedName(finalize,[Default]), UsedName(receiveSignal,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(lastTemperatureReading,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(ReadTemperature,[Default]), UsedName(onSignal,[Default]), UsedName(com;malaka;Device;init;,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(Device,[Default]), UsedName(onMessage,[Default]), UsedName(RespondTemperature,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(DeviceMessage,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(orElse,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The com.malaka.Device has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(narrow,[Default]), UsedName(finalize,[Default]), UsedName(receiveSignal,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(lastTemperatureReading,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(ReadTemperature,[Default]), UsedName(onSignal,[Default]), UsedName(com;malaka;Device;init;,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(Device,[Default]), UsedName(onMessage,[Default]), UsedName(RespondTemperature,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(DeviceMessage,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(orElse,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Device)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Printer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Printer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Printer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Printer,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(Receive,[Default]), UsedName(context,[Implicit]), UsedName(ne,[Default]), UsedName(aroundPostStop,[Default]), UsedName(log,[Default]), UsedName(preStart,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(receive,[Default]), UsedName(getClass,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(postRestart,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(Overview,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(props,[Default]), UsedName(notifyAll,[Default]), UsedName(com;malaka;Printer;init;,[Default]), UsedName(preRestart,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Printer,[Default]), UsedName(aroundPreStart,[Default]), UsedName(self,[Implicit]), UsedName(notify,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(postStop,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The com.malaka.Printer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Printer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.BankActor.payTax...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.BankActor.payTax)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.BankActor.payTax)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.BankActor.payTax,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(com;malaka;BankActor;payTax;init;,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(percentage,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(payTax,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.BankActor.payTax has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(compose,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(com;malaka;BankActor;payTax;init;,[Default]), UsedName(andThen,[Default]), UsedName(productElement,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(percentage,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(payTax,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.BankActor.payTax)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.malaka.Device.ReadTemperature...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.malaka.Device.ReadTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.malaka.Device.ReadTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.malaka.Device.ReadTemperature,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(ReadTemperature,[Default]), UsedName(productElement,[Default]), UsedName(replyTo,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(requestId,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(com;malaka;Device;ReadTemperature;init;,[Default]), UsedName(productPrefix,[Default]))) invalidates 1 classes due to The com.malaka.Device.ReadTemperature has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(ReadTemperature,[Default]), UsedName(productElement,[Default]), UsedName(replyTo,[Default]), UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(requestId,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(com;malaka;Device;ReadTemperature;init;,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.malaka.Device.ReadTemperature)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
